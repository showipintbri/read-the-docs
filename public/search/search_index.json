{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"mermaid/","title":"mm test","text":"<pre><code>flowchart TD\n    A[Christmas] --&gt;|Get money| B(Go shopping)\n    B --&gt; C{Let me think}\n    C --&gt;|One| D[Laptop]\n    C --&gt;|Two| E[iPhone]\n    C --&gt;|Three| F[fa:fa-car Car]\n</code></pre>"},{"location":"_arr_apps/","title":"*arr App's","text":""},{"location":"_arr_apps/#default-ports","title":"Default Ports","text":"App Default Port Lidarr tcp/8686 Prowlarr tcp/9696 Radarr tcp/7878 Sonarr tcp/8989 Other Apps Default Port Sabnzbd tcp/8080 Jellyseerr tcp/ Jellystat tcp/ Heimdall tcp/"},{"location":"cisco/","title":"Cisco","text":"<p>Links a references to things I don't want to lose again.</p>"},{"location":"cisco/capture-3850/","title":"Packet Capture: Cisco 3850","text":"<ul> <li>License: Requires IPBASE or IPSERVICES.</li> <li>Capture filters are not supported.</li> <li>Layer 2 and Layer 3 EtherChannels are not supported.</li> <li>MAC Access Control List (ACL) is only used for non-IP packets such as ARP. It is not supported on a Layer 3 port or Switch Virtual Interface (SVI).</li> <li>During a Wireshark packet capture, hardware forwarding happens concurrently.</li> <li>Switch CPU generated packets can be captured and must use the control-plane as the source interface.</li> <li>It is not possible to capture rewrite information. Egress captures do not show and changes to the packet performed by the Cisco Catalyst 3850 Series Switch.</li> </ul>"},{"location":"cisco/capture-3850/#configure","title":"Configure","text":"<pre><code>monitor capture [name] interface [interface name: Gi0/0/1] [direction:in|out|both]\nmonitor capture [name] match ipv4 [source ip/xx] [dest ip/xx]\nmonitor capture [name] match ipv4 any any\nmonitor capture [name] file location [location: flash:mypcap.pcap]\nmonitor capture [name] buffer size 100     # This is in Megabytes\n</code></pre>"},{"location":"cisco/capture-3850/#start-the-capture","title":"Start the Capture","text":"<pre><code>monitor capture [name] start\n</code></pre>"},{"location":"cisco/capture-3850/#show-capture-status","title":"Show Capture Status","text":"<pre><code>show monitor capture [name]\n</code></pre>"},{"location":"cisco/capture-3850/#view-capture-ascii-only","title":"View Capture (ASCII Only)","text":"<pre><code>show monitor capture file flash:[name].pcap\n</code></pre>"},{"location":"cisco/capture-3850/#view-capture-embedded-tshark","title":"View Capture (Embedded <code>tshark</code>)","text":"<pre><code>show monitor capture file flash:[name].pcap detailed\n</code></pre>"},{"location":"cisco/capture-3850/#view-capture-hex-dump","title":"View Capture (hex dump)","text":"<pre><code>show monitor capture [name] buffer dump\n</code></pre>"},{"location":"cisco/capture-3850/#stop-the-capture","title":"Stop the Capture","text":"<pre><code>monitor capture [name] start\n</code></pre>"},{"location":"cisco/capture-3850/#export-pcap-to-workstation","title":"Export PCAP to Workstation","text":"<pre><code>monitor capture [name] export tftp://[workstation_ip]/[name].pcap\n</code></pre>"},{"location":"cisco/capture-3850/#verify-capture-configs","title":"Verify Capture Configs","text":"<pre><code>show monitor capture [name] parameter\n</code></pre>"},{"location":"cisco/capture-3850/#reference","title":"Reference:","text":"<ul> <li>https://www.cisco.com/c/en/us/support/docs/switches/catalyst-3850-series-switches/117639-configure-wireshark-00.html</li> </ul>"},{"location":"cisco/capture-asa/","title":"Packet Captures: ASA","text":""},{"location":"cisco/capture-asa/#start-a-capture","title":"Start a Capture","text":"<pre><code>enable\ncapture [name] interface [int_name] match ip [src_host] [src_subnet_mask] [dst_host] [dst_subnet_mask]\n\nExample:\ncapture testcapture interface inside match ip 192.168.100.99 255.255.255.255 8.8.8.8 255.255.255.255\n</code></pre>"},{"location":"cisco/capture-asa/#stop-a-capture","title":"Stop a Capture","text":"<pre><code>no capture [name] interface [int_name]\n</code></pre>"},{"location":"cisco/capture-asa/#show-the-captured-packets","title":"Show the Captured Packets","text":"<p>Only shows ASCII output. <pre><code>show capture [name]\n</code></pre></p>"},{"location":"cisco/capture-asa/#clear-the-capture-buffer","title":"Clear the Capture Buffer","text":"<p>This removes the captured data but keeps the 'capture configs' in place incase you need to re-run them using the same name. <pre><code>clear capture [name]\n\nclear capture /all #Clears the buffers for all captures\n</code></pre></p>"},{"location":"cisco/capture-asa/#download-the-capture","title":"Download the Capture","text":"<p>From a workstation navigate to: <code>https://&lt;ip_of_asa&gt;/admin/capture/&lt;capture_name&gt;/pcap</code> or from the ASA: <pre><code>copy /pcap capture:&lt;capture-name&gt; tftp://&lt;server-ip-address&gt;\n</code></pre></p>"},{"location":"cisco/catalyst-9500/","title":"Cisco Catalyst 9500","text":""},{"location":"cisco/catalyst-9500/#firmware-upgrade","title":"Firmware Upgrade","text":""},{"location":"cisco/catalyst-9500/#check-the-existing-install-method","title":"Check the existing install method:","text":"<pre><code>show version | i System image\n</code></pre> <p>If output show's filename ending in .bin == BUNDLE If output show's filename \"packages.conf\" == INSTALL*</p> <pre><code>show install summary\n</code></pre> <p>If output show's details == INSTALL If output show's \"Bundle\" == BUNDLE</p>"},{"location":"cisco/catalyst-9500/#verify","title":"Verify","text":"<p>Verify the <code>boot</code> commands in the config are correct:</p> <ul> <li><code>packages.conf</code> == INSTALL</li> <li><code>*.bin</code> == BUNDLE</li> </ul> <p>If using INSTALL do not change or modify the <code>boot</code> commands or the <code>packages.conf</code> file.</p>"},{"location":"cisco/catalyst-9500/#remove-unused-firmware-files","title":"Remove unused firmware files","text":"<p>This makes more room available on the storage of the device as firmware images are quite large.</p> <pre><code>install remove inactive\n</code></pre>"},{"location":"cisco/catalyst-9500/#copy-firmware-file-to-device","title":"Copy firmware file to device","text":"<p>Use, <code>scp</code> or any other available method.</p>"},{"location":"cisco/catalyst-9500/#verify-the-firmware-hashes","title":"Verify the firmware hashes","text":"<pre><code>verify /md5 flash:&lt;filename.bin&gt;\n</code></pre> <p>Ensure the hash of the file and the reported hashes match.</p>"},{"location":"cisco/catalyst-9500/#install","title":"Install","text":"<p><pre><code>install add file flash:&lt;filename.bin&gt; activate commit\n</code></pre> This command will:   - Unpack the <code>*.bin</code> image   - Update the <code>packages.conf</code> file   - Commit the new packages</p>"},{"location":"cisco/catalyst-9500/#after-reboot-verify","title":"After reboot, Verify","text":"<p>Use the same verification commands in step 1: <code>show version</code>, <code>show install summary</code></p>"},{"location":"cisco/forensics/","title":"Cisco Forensics","text":"<p>Collection of tools, links, techniques and resources to perform forensics on a Cisco Device.</p>"},{"location":"cisco/forensics/#core-dump","title":"Core Dump","text":"<p>You'll Need: - Console Cable - Network Cable - TFTP Server / FTP Server Software ([https://pjo2.github.io/tftpd64/])(https://pjo2.github.io/tftpd64/)</p> <p>Using a laptop or computer connect to the device with both a console cable and a regular ethernet cable. You will issue commands and capture logs from the console while the network cable will be used to off-load the core dumps and memory dumps off the device and onto a TFTP server.</p>"},{"location":"cisco/forensics/#step-1-capture-the-core-dump","title":"Step 1: Capture The Core Dump","text":"<p>Log into the device via the console cable and issue the <code>write core [ip.add.re.ss]</code> command using the IP of your workstation as the destination device.</p> <p>Getting a Core Dump from a Cisco3560CX took: ~35 minutes and was ~528MB</p> <pre><code>Switch&gt;\nSwitch&gt; enable\nSwitch#\nSwitch# write core xx.xx.xx.1\nBase name of core files to write [Switch-core]?\nwriting uncompressed tftp://xx.xx.xx.1/Switch-corecoredump\n!!!!!!!!!!!!!!!!!!!! [...OMITTED...]\n</code></pre> <p>References: </p> <ul> <li>Creating Core Dumps: https://www.cisco.com/c/en/us/support/docs/ios-nx-os-software/ios-software-releases-122-mainline/12687-appA.html</li> <li>Didier Stevens: NAFT - https://blog.didierstevens.com/programs/network-appliance-forensic-toolkit/</li> <li>SANS: Cisco Router Forensics - https://www.sans.org/blog/cisco-router-forensics/</li> </ul>"},{"location":"cloudflare/","title":"Cloudflare Zero-Trust","text":""},{"location":"cloudflare/#cloudflared","title":"cloudflared","text":"<p>Cloudflared (cloud-flare-dee) is a light weight multi-purpose daemon.</p> <p>It can be invoked manually or through scripting/service files to manage tunnels. You can run many instances of cloudflared at once if needed. For example, I run one instance acting as a DNS to DNS over HTTPS proxy and another instance as a tunnel to reach the webserver on that box which is listening on localhost.</p>"},{"location":"cloudflare/#example-cloudflared-service-file-for-dns-to-dns-over-https-proxy","title":"Example cloudflared service file for DNS to DNS over HTTPS Proxy","text":"<pre><code>[Unit]\nDescription=DNS over HTTPS (DoH) proxy client\nWants=network-online.target nss-lookup.target\nBefore=nss-lookup.target\n\n[Service]\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nCapabilityBoundingSet=CAP_NET_BIND_SERVICE\nTimeoutStartSec=0\nType=notify\nExecStart=/usr/bin/cloudflared --no-autoupdate proxy-dns --address \"localhost\" --port 5053 --upstream \"https://x0x0x0x0x.cloudflare-gateway.com/dns-query\" --bootstrap \"https://1.1.1.1/dns-query\", \"https://1.0.0.1/dns-query\"\nRestart=on-failure\nRestartSec=5s\n\n[Install]\nWantedBy=multi-user.target\n</code></pre>"},{"location":"credentials/","title":"Default Credentials","text":"<ul> <li>Dell S4112F-ON - OS10: <code>admin</code>/<code>admin</code></li> <li>GigaVUE-OS: <code>admin</code>/<code>admin123A!</code></li> </ul>"},{"location":"docker-podman/","title":"Docker/Podman","text":"<p>This page is dedicated to all things containers :)</p> <p>I use docker and podman interchangeably.</p>"},{"location":"docker-podman/#run-a-container","title":"Run a Container","text":"<ul> <li><code>-i</code>: interactive</li> <li><code>-t</code>: terminal</li> <li><code>-v [src]:[dst]</code>: mounting a storage volume</li> </ul> <p>Example: Starting my Zeek(bro) container</p> <pre><code>sudo docker run -it -v `pwd`:/pcap broplatform/bro:4.2.0 /bin/bash\n</code></pre>"},{"location":"docker-podman/#list-running-containers","title":"List Running Containers","text":"<pre><code>podman container list\n</code></pre>"},{"location":"docker-podman/#get-container-details","title":"Get Container Details","text":"<pre><code>podman inspect [container_name]\n</code></pre> <p>References:</p> <ul> <li>Official Podman Documentation: https://docs.podman.io/en/latest/index.html</li> </ul>"},{"location":"elastic/","title":"Elasticsearch / Logstash / Kibana","text":""},{"location":"elastic/#elasticsearch-api-wcurl","title":"Elasticsearch API w/CURL","text":"<p>tcp/9200 is the default port.</p> <p>HTTP:</p> <pre><code>curl http://localhost:9200\n</code></pre> <p>If you get an error: <code>curl: (52) Empty reply from server</code> this likely means you need to use <code>https</code>.</p> <p>HTTPS: <pre><code>curl https://localhost:9200\n</code></pre></p> <p>If you get an error about trusted certificates you can use the <code>-k</code> flag to tell CURL to ignore untrusted certificates.</p> <p>HTTPS, Ignore Untrusted Certificates: <pre><code>curl -k https://localhost:9200\n</code></pre></p> <p>If you get an error about the 'security realm', you'll need to add HTTP Basic Authentication to your command.</p> <p>HTTPS, Ignore Untrusted Certificates w/Authentication: <pre><code>curl -k -u elastic:[password] https://localhost:9200\n</code></pre></p> <p>List Indexes: <pre><code>curl -k -u elastic:[password] -XGET \"https://localhost:9200/_aliases?pretty=true\"\n</code></pre></p> <p>Delete Index: <pre><code>curl -k -u elastic:[password] -XDELETE \"https://localhost:9200/[explicit_index_name]\"\n</code></pre></p>"},{"location":"elastic/#references","title":"References:","text":"<ul> <li>https://linuxhint.com/elasticsearch-delete-index-how-to/</li> </ul>"},{"location":"elastic/#troubleshooting","title":"Troubleshooting","text":""},{"location":"elastic/#error-high-watermark","title":"Error: \"high watermark\"","text":"<p>Your storage is full beyond the configured \"high watermark\" (90%?). You need to manually delete indices.</p> <ol> <li>List your indexes (wildcards accepted)</li> <li>Delete individual indexes (wildcards NOT accepted)</li> </ol>"},{"location":"firefox/","title":"Firefox","text":""},{"location":"firefox/#disable-ech-encrypted-client-hello","title":"Disable ECH (Encrypted Client Hello)","text":"<ol> <li>Navigate to \"about:config\" in the URL bar.</li> <li>In the configuration search bar enter: \"ech\"</li> <li>Locate these 2 items and change them to \"false\":<ul> <li>network.dns.echconfig.enabled</li> <li>network.dns.http3_echconfig.enabled</li> </ul> </li> </ol>"},{"location":"git/","title":"Git","text":""},{"location":"git/#the-simplest-git-workflow","title":"The simplest Git workflow","text":"<p>Init --&gt; Add --&gt; Commit --&gt; Push</p> <ol> <li>Create a local repo</li> <li>Add all files from your current directory to Git</li> <li>Commit those files/changes</li> <li>Push those changes to the repo</li> </ol> <pre><code>git init .\ngit add .\ngit commit -m \"New Files Added\"\ngit push\n</code></pre>"},{"location":"git/#clone-remote-repository","title":"Clone Remote Repository","text":"<pre><code>git clone https://github.com/ntop/nDPI.git\n</code></pre>"},{"location":"git/#clone-a-specific-branch-from-remote-repository","title":"Clone a Specific Branch from Remote Repository","text":"<p>NOTE: Still fetches all the branches but marks the one you specify as active. <pre><code>git clone --branch 4.2-stable https://github.com/ntop/nDPI.git\n</code></pre></p>"},{"location":"git/#clone-a-specific-branch-and-only-that-branch-from-a-remote-repo","title":"Clone a Specific Branch and Only that Branch from a Remote Repo","text":"<pre><code>git clone -b 4.2-stable --single-branch https://github.com/ntop/nDPI.git\n</code></pre>"},{"location":"graylog/","title":"Graylog","text":"<p>My collection of Graylog tips, tricks, warnings, cautions and lessons learned.</p>"},{"location":"graylog/field_names/","title":"Field Names","text":"<p>Do Not Use: </p> <ul> <li><code>syslog_*</code></li> </ul> <p>Recently when building some parsers I was receiving a log like this on a \"Plain Text/RAW\" input.  </p> <pre><code>&lt;27&gt;Nov 29 15:05:42 blah blah blah msg msg msg\n</code></pre> <p>I was trying to parse out the number from between the left and right arrows, which is the Syslog Priority value and put it in a field named: <code>syslog_priority</code>. This wasn't working. After hours of futtsing with it, it was determined that the cause of the failures was when I started a field name with <code>syslog_</code>. I tested and tested and got the same results with each test: any time <code>syslog_</code> was in the field name the pipeline rule wouldn't work.</p> <p>Assumption: I'm sure this is because how syslog messages are recieved and processed under the hood, but I can not confirm that.</p>"},{"location":"graylog/field_names/#troubleshooting","title":"Troubleshooting","text":""},{"location":"graylog/field_names/#blank-white-login-page","title":"Blank White Login Page","text":"<p>When navigating to the WebGUI and greeted by a blank white page when the system otherwise seems stable:</p> <ul> <li>SSH into the system make sure the services are running as expected</li> <li>Check logs for errors</li> </ul> <p>Errors Seen:</p> <pre><code>java.nio.file.FileSystemNotFoundException: /usr/share/graylog-server/plugin/graylog-plugin-enterprise-4.2.1.jar\n</code></pre> <p>When you, <code>ls /usr/share/graylog-server/plugin/</code>, the files throwing the error aren't there. </p> <p>Try removing the enterprise plug-in assuming you aren't using the enterprise features:</p> <pre><code>yum remove graylog-enterprise-plugins\n</code></pre>"},{"location":"juniper/","title":"Juniper","text":"<p>My collection of Juniper stuff that I commonly forget.</p>"},{"location":"juniper/#default-configuration","title":"Default Configuration","text":"<p><pre><code>switch# load factory-default\nswitch# delete system commit\nswitch# commit\n</code></pre> NOTE: You might need to set a <code>root-authentication</code> before issuing the final commit.</p> <p>Reference: </p> <ul> <li>https://www.juniper.net/documentation/us/en/software/junos/cli/topics/topic-map/junos-factory-default.html</li> </ul>"},{"location":"juniper/#create-vlan","title":"Create VLAN","text":"<p><pre><code>set vlans [name] vlan-id [##]\n</code></pre> Example: <code>set vlans v30-Engineering vlan-id 30</code></p>"},{"location":"juniper/#create-vlan-interface-l3","title":"Create VLAN Interface (L3)","text":"<p><pre><code>set interfaces vlan unit [##] family inet address [address/mask]]\nset vlans [name] l3-interface vlan.[##]\n</code></pre> Example: <pre><code>set interfaces vlan unit 30 family inet address 10.30.30.254/24\nset vlans v30-Engineering l3-interface vlan.30\n</code></pre></p>"},{"location":"juniper/#switchport-access","title":"Switchport: Access","text":"<p><pre><code>set interfaces [interface] unit 0 family ethernet-switching port-mode access\nset interfaces [interface] unit 0 family ethernet-switching vlan members [vlan-name]\n</code></pre> Example: <pre><code>set interfaces ge-0/0/47 description \"Access: Engineering Desk-002\"\nset interfaces ge-0/0/47 unit 0 family ethernet-switching port-mode access\nset interfaces ge-0/0/47 unit 0 family ethernet-switching vlan members v30-Engineering\n</code></pre></p>"},{"location":"juniper/#switchport-trunk","title":"Switchport: Trunk","text":"<p><pre><code>set interfaces [interface] unit 0 family ethernet-switching port-mode trunk\nset interfaces [interface] unit 0 family ethernet-switching vlan members [vlan-name]\n</code></pre> Example: <pre><code>set interfaces ge-0/0/1 description \"Trunk: To Engineering Dept.\"\nset interfaces ge-0/0/1 unit 0 family ethernet-switching port-mode trunk\nset interfaces ge-0/0/1 unit 0 family ethernet-switching vlan members v30-Engineering\n</code></pre></p>"},{"location":"juniper/#interface-range","title":"Interface Range","text":"<p><pre><code>set interfaces interface-range [range-name] member-range [start-int] to [end-int]\n</code></pre> Example: <pre><code>set interfaces interface-range v30-Eng-Dept member-range ge-0/0/12 to ge-0/0/46`\nset interfaces interface-range v30-Eng-Dept description \"Access: Engineering Department\"`\nset interfaces interface-range v30-Eng-Dep unit 0 family ethernet-switching port-mode access`\nset interfaces interface-range v30-Eng-Dep unit 0 family ethernet-switching vlan members v30-Engineering`\n</code></pre></p>"},{"location":"juniper/#static-route","title":"Static Route","text":"<p><pre><code>set routing-options static route [prefix/mask] next-hop [nh-address]\n</code></pre> Example: <pre><code>set routing-options static route 0.0.0.0/0 next-hop 10.30.30.1`\n</code></pre></p>"},{"location":"juniper/#change-root-password","title":"Change <code>root</code> Password","text":"<pre><code>set system root-authentication plain-text-password\nNew password: [input-password] &lt;enter&gt;\nRetype new password: [input-password] &lt;enter&gt;\n</code></pre>"},{"location":"juniper/#new-user","title":"New User","text":"<pre><code>set system login user admin class super-user\nset system login user admin authentication plain-text-password &lt;enter&gt;\nNew password: [input-password] &lt;enter&gt;\nRetype new password: [input-password] &lt;enter&gt;\n</code></pre>"},{"location":"juniper/#ssh-access","title":"SSH Access","text":"<pre><code>set system services ssh\n</code></pre>"},{"location":"juniper/#rebootrestart","title":"Reboot/Restart","text":"<pre><code>request system reboot\n</code></pre>"},{"location":"juniper/#shutdown","title":"Shutdown","text":"<pre><code>request system power-off\nor (? Whats the difference ?)\nrequest system halt\n</code></pre>"},{"location":"juniper/#aaa-radius-authentication","title":"AAA - RADIUS Authentication","text":"<pre><code># This is required for the RADIUS users to assume this profile\nset system login user remote class super-user \n\n# 'local' doesn't need to be specified. If it can't reach RADIUS it will fall back to local users\nset system services ssh authentication-order radius \n\nset system radius-server [SERVER_IP] secret [clear_text_key]\nset system radius-server [SERVER_IP] timeout 15\nset system radius-server [SERVER_IP] source-address [your_src_ip]\n\nset system radius-options enhanced-accounting\n</code></pre> <p>I also, like to add: <code>set system services ssh root-login deny</code> to prevent root user from logging in remotely, forcing this to be a console only credential, incase an on-site rescue is needed.</p>"},{"location":"juniper/#ikev2-ipsec-site-to-site-tunnel","title":"IKEv2 IPSEC Site-to-Site Tunnel","text":"<pre><code># -------------------------\n# IKE Phase 1 (IKEv2)\n# -------------------------\nset security ike proposal IKEV2-PROP authentication-method pre-shared-keys\nset security ike proposal IKEV2-PROP dh-group group14\nset security ike proposal IKEV2-PROP encryption-algorithm aes-256-gcm\nset security ike proposal IKEV2-PROP lifetime-seconds 28800\nset security ike proposal IKEV2-PROP authentication-algorithm hmac-sha-256-128\n\nset security ike policy IKEV2-POL mode main\nset security ike policy IKEV2-POL proposals IKEV2-PROP\nset security ike policy IKEV2-POL pre-shared-key ascii-text \"SuperSecret123\"\n\nset security ike gateway GW-TO-SRXB ike-policy IKEV2-POL\nset security ike gateway GW-TO-SRXB address 203.0.113.2\nset security ike gateway GW-TO-SRXB external-interface ge-0/0/0.0\nset security ike gateway GW-TO-SRXB version v2-only\nset security ike gateway GW-TO-SRXB local-identity inet 198.51.100.1\nset security ike gateway GW-TO-SRXB remote-identity inet 203.0.113.2\nset security ike gateway GW-TO-SRXB dead-peer-detection interval 10 retry 3\n\n# -------------------------\n# IPsec Phase 2\n# -------------------------\nset security ipsec proposal IPSEC-PROP protocol esp\nset security ipsec proposal IPSEC-PROP authentication-algorithm hmac-sha-256-128\nset security ipsec proposal IPSEC-PROP encryption-algorithm aes-256-gcm\nset security ipsec proposal IPSEC-PROP lifetime-seconds 3600\n\nset security ipsec policy IPSEC-POL perfect-forward-secrecy keys group14\nset security ipsec policy IPSEC-POL proposals IPSEC-PROP\n\n# -------------------------\n# VPN Binding\n# -------------------------\nset security ipsec vpn VPN-TO-SRXB ike gateway GW-TO-SRXB\nset security ipsec vpn VPN-TO-SRXB ike ipsec-policy IPSEC-POL\nset security ipsec vpn VPN-TO-SRXB bind-interface st0.0\nset security ipsec vpn VPN-TO-SRXB vpn-monitor optimized\nset security ipsec vpn VPN-TO-SRXB establish-tunnels immediately\n\n# -------------------------\n# st0 interface\n# -------------------------\nset interfaces st0 unit 0 family inet address 169.254.10.1/30\nset security zones security-zone vpn-zone interfaces st0.0\n\n# -------------------------\n# Security zones &amp; policies\n# -------------------------\nset security zones security-zone trust interfaces ge-0/0/1.0\nset security zones security-zone untrust interfaces ge-0/0/0.0\n\nset security policies from-zone trust to-zone vpn-zone policy trust-to-vpn match source-address any destination-address any application any\nset security policies from-zone trust to-zone vpn-zone policy trust-to-vpn then permit\n\nset security policies from-zone vpn-zone to-zone trust policy vpn-to-trust match source-address any destination-address any application any\nset security policies from-zone vpn-zone to-zone trust policy vpn-to-trust then permit\n\n# -------------------------\n# Routing\n# -------------------------\nset routing-options static route 10.2.2.0/24 next-hop st0.0\n</code></pre>"},{"location":"linux/","title":"Linux","text":"<p>This page contains many linux one-liners, or software packages or things I've needed to look up, more than once.</p>"},{"location":"linux/bash/","title":"Bash","text":"<p>Bash reminders, tips, tricks and things I've forgot.</p>"},{"location":"linux/bash/#stderr-stdout","title":"STDERR &amp; STDOUT","text":"<p>When using <code>&gt;&gt; output.txt</code>, it will only include STDOUT (Standard Output). To include errors with the output use:</p> <ul> <li><code>&gt;&gt; output.txt 2&gt;&amp;1</code></li> </ul>"},{"location":"linux/bash/#for-loop","title":"For Loop","text":"<pre><code>for i in $(ls *.*)\ndo;\n  mv $i prefix_$i;\ndone\n</code></pre> <p>or as a one-liner: <code>for i in $(ls *.*) do; mv $i prefix_$i; done</code></p>"},{"location":"linux/bash/#for-loop-in-range-of-numbers","title":"For Loop in Range of Numbers","text":"<pre><code>for i in {1..450}\ndo\nwget http://hostname.fqdn:8081/$i -O /dev/null\nsleep 1\ndone\n</code></pre> <p>or as a one-liner: <code>for i in {1..450}; do wget http://hostname.fqdn:8081/$i -O /dev/null; sleep 1; done</code></p>"},{"location":"linux/bash/#multi-line-append","title":"Multi-line Append","text":"<pre><code>cat &gt;&gt; /path/to/existingFile.text&lt;&lt; EOF\nsome text line 1\nsome text line 2\nsome text line 3\nEOF\n</code></pre>"},{"location":"linux/bash/#users-and-groups","title":"Users and Groups","text":""},{"location":"linux/bash/#create-a-new-user","title":"Create a new user","text":"<pre><code>useradd [options] [user_name]\n</code></pre>"},{"location":"linux/bash/#assignchange-a-password-for-a-user","title":"Assign/Change a password for a user","text":"<pre><code>passwd [user_name]\n</code></pre>"},{"location":"linux/bash/#add-a-user-to-a-group","title":"Add a User to a Group","text":"<pre><code>usermod -a -G [group_name] [user_name]\n</code></pre>"},{"location":"linux/centos/","title":"Centos","text":""},{"location":"linux/centos/#static-ip-address","title":"Static IP Address","text":"<p>Edit: <code>/etc/sysconfig/network-scripts/ifcfg-[interface_name]</code></p> <pre><code>TYPE=Ethernet\n\nBOOTPROTO=static\nNAME=eno2\nUUID=a6a9b6a7-5215-4cf1-9f74-3d03559674a9\nDEVICE=eno2\nONBOOT=yes\n\nIPADDR=10.13.65.246\nNETMASK=255.255.255.0\nGATEWAY=10.13.65.1\nDNS1=1.1.1.1\nDNS2=8.8.8.8\n</code></pre> <p>After Editing the file restart networking:  <pre><code>sudo systemctl restart network\n</code></pre></p>"},{"location":"linux/centos/#hostname","title":"Hostname","text":"<p>See current hostname: <code>hostname</code></p> <p>Edit: <code>vi /etc/hostname</code></p> <p>Validate with: <code>hostnamectl</code></p> <p>A restart is often required or logout of your current SSH session and log back in.</p>"},{"location":"linux/centos/#firewall","title":"Firewall","text":"<p>Add Port/Protocol Permanently: <pre><code>firewall-cmd --add-port=xxxx/tcp --permanent \n</code></pre></p> <p>NOTE: YOU MUST RESTART THE SERVICE FOR CHANGES TO TAKE EFFECT!!! <pre><code>systemctl restart firewalld.service\n</code></pre></p> <pre><code>[root@hostname ~]# firewall-cmd --list-all\npublic (active)\n  target: default\n  icmp-block-inversion: no\n  interfaces: ens192\n  sources:\n  services: cockpit dhcpv6-client snmp ssh\n  ports: 9200/tcp\n  protocols:\n  forward: no\n  masquerade: no\n  forward-ports:\n  source-ports:\n  icmp-blocks:\n  rich rules:\n</code></pre>"},{"location":"linux/ipv6/","title":"IPv6","text":""},{"location":"linux/ipv6/#ubuntu-netplan","title":"Ubuntu: Netplan","text":"<p>Create a new config file. Highest one takes precendence. <pre><code>touch /etc/netplan/99-ipv6.yaml\n\n-------------------------------\nnetwork:\n  ethernets:\n    ens160:\n      dhcp6: true\n      accept-ra: true     # Host will use SLAAC to configure its address and gateway\n      addresses: ['fd10::10/64'] #ULA address for my site\n      nameservers:\n          addresses: ['2606:4700:4700::1111'] #Cloudflare DNS\n  version: 2\n</code></pre></p>"},{"location":"linux/rsyslog/","title":"rsyslog","text":"<p>rsyslog is a linux syslog software package. https://www.rsyslog.com/</p> <ul> <li>Config File: /etc/rsyslog.conf</li> </ul>"},{"location":"linux/rsyslog/#startstoprestart","title":"start/stop/restart","text":"<p>When starting/stopping/restarting the rsyslog service you'll sometimes be shown this error message: <pre><code>sudo systemctl stop rsyslog\nWarning: Stopping rsyslog.service, but it can still be activated by:\n  syslog.socket\n</code></pre></p> <p>Explanation: from: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=815862</p> <p>As this message says, rsyslog uses socket activation under systemd. So whenever there is a log message coming in, rsyslog will be started on demand. The unit is named syslog.socket.</p>"},{"location":"linux/rsyslog/#to-stopstartrestartstatus","title":"To stop/start/restart/status:","text":"<pre><code>systemctl stop syslog.socket rsyslog.service\n\nsystemctl start syslog.socket rsyslog.service\n\nsystemctl restart syslog.socket rsyslog.service\n\nsystemctl status syslog.socket rsyslog.service\n</code></pre>"},{"location":"linux/rsyslog/#rsyslogconf","title":"rsyslog.conf","text":"<p>Reference: https://www.man7.org/linux/man-pages/man5/rsyslog.conf.5.html</p> <pre><code>cat /etc/rsyslog.d/vyos-rsyslog.conf\n## generated by syslog.py ##\n## file based logging\n$outchannel global,/var/log/messages,262144,/usr/sbin/logrotate /etc/logrotate.d/vyos-rsyslog\n*.notice;local7.debug :omfile:$global\n## console logging\n## remote logging\n*.* @@(o)st-graylog01.stech.sealingtech.org:514;RSYSLOG_SyslogProtocol23Format\n</code></pre>"},{"location":"linux/rsyslog/#explanation","title":"Explanation:","text":"<pre><code>*.*                             : any facility . any level\n@                               : UDP transport\n@@                              : TCP transport\n(o)                             : Use octet-counted framing (optional)\nRSYSLOG_SyslogProtocol23Format  : Use Protocol23Format\n</code></pre> <p>References: </p>"},{"location":"linux/rsyslog/#-tcp_framing-httpsrsyslog-docreadthedocsioenlatestconfigurationmodulesomfwdhtmlaction-parameters","title":"- \"TCP_Framing\" https://rsyslog-doc.readthedocs.io/en/latest/configuration/modules/omfwd.html#action-parameters","text":""},{"location":"linux/selinux/","title":"SELinux","text":"<p>Security-Enhanced Linux</p> <pre><code>[root@hostname ~]# getenforce\nEnforcing\n[root@hostname ~]# setenforce 0\n[root@hostname ~]# getenforce\nPermissive\n[root@hostname ~]#\n</code></pre> <pre><code>semanage port -a -t http_port_t -p tcp 9200\n</code></pre>"},{"location":"linux/systemctl/","title":"systemctl","text":"<pre><code>systemctl start [unit]\nsystemctl status [unit]\nsystemctl stop [unit]\nsystemctl reload [unit]\nsystemctl restart [unit]\n\nsystemctl enable [unit]\nsystemctl disable [unit]\nsystemctl list-units [unit]\nsystemctl list-sockets [unit]\nsystemctl list-unit-files [pattern]\n</code></pre>"},{"location":"linux/systemctl/#example-service-files","title":"Example *.service files","text":"<p>Service files are typically found in: <code>/etc/systemd/system/[service_name].service</code> Service can only have 1 <code>ExecStart</code> statement.</p> <pre><code>[Unit]\nDescription=cloudflared\nAfter=network.target\n\n[Service]\nTimeoutStartSec=0\nType=notify\nExecStart=/usr/bin/cloudflared --no-autoupdate tunnel run --token x0x0x0x0x0x0x0x0x0x\nRestart=on-failure\nRestartSec=5s\n\n[Install]\nWantedBy=multi-user.target\n</code></pre>"},{"location":"linux/systemctl/#showlist-all-services","title":"Show/List All Services","text":"<pre><code>systemctl list-units --all *.service\n</code></pre>"},{"location":"linux/systemctl/#show-details-about-a-single-service","title":"Show Details about a Single Service","text":"<pre><code>systemctl status [service_name]\n</code></pre>"},{"location":"linux/systemctl/#references","title":"References:","text":""},{"location":"python/","title":"Python","text":"<p>This is one location for all things python that I've had to look up, or forgotten or had a bookmark for in my browser. This is NOT intended to be the worlds single reference python resource, instead it serves me directly. If you'd like to submit a correction or contribute, PR's are welcomed. I tried to be original and unique in most of my examples and code, this was not to rip-off anyone elses examples or work. There are countless sites over the years I've used for reference and python script text files on my desktop of code I'll never remember where it all came from.</p> <p>Thank you to everyone who puts code and examples out there on the internet. Here's my little place to aggregate what I use and give back.</p>"},{"location":"python/dictionaries/","title":"Dictionaries","text":"<p>Dictionaries are a data structure made up of 'keys' and 'values' created with the use of curly-braces '<code>{}</code>' in Python.</p> <p>Rules: </p> <ul> <li>Keys must be unique.</li> <li>If a Key needs more than 1 Value, you must use a list, nested dictionary, tuple or other iterable.</li> </ul>"},{"location":"python/dictionaries/#create-a-dictionary","title":"Create a Dictionary","text":"<p>Before you can replace, update or delete any keys or values you must instantiate the dictionary.</p>"},{"location":"python/dictionaries/#empty-dictionary","title":"Empty dictionary:","text":"<pre><code>my_dict = {}\n</code></pre>"},{"location":"python/dictionaries/#or-instantiate-with-keys-and-values","title":"Or instantiate with keys and values:","text":"<pre><code>my_dict = {'key1': 'value1'}\nor\nmy_dict['key1'] = 'value1'\n</code></pre> <p>You can call the object directly or print the dictionary:</p> <pre><code>&gt;&gt;&gt; my_dict = {'key1': 'value1'}\n\n&gt;&gt;&gt; my_dict\n{'key1': 'value1'}\n</code></pre> <p>Using <code>print()</code>:</p> <pre><code>&gt;&gt;&gt; my_dict = {'key1': 'value1'}\n\n&gt;&gt;&gt; print(my_dict)\n{'key1': 'value1'}\n</code></pre>"},{"location":"python/dictionaries/#add-key-value-to-existing-dictionary","title":"Add Key &amp; Value to Existing Dictionary","text":"<ul> <li>Key must be unique</li> <li>If Key is not unique Value will be overwritten.</li> </ul>"},{"location":"python/dictionaries/#start-with-a-dictionary","title":"Start with a dictionary","text":"<pre><code>&gt;&gt;&gt; my_dict = {'key1': 'value1'}\n&gt;&gt;&gt; my_dict\n{'key1': 'value1'}\n</code></pre>"},{"location":"python/dictionaries/#create-a-new-key-with-value","title":"Create a new Key with Value","text":"<pre><code>&gt;&gt;&gt; my_dict['key2'] = 'value0'\n&gt;&gt;&gt; my_dict\n{'key1': 'value1', 'key2': 'value0'}\n</code></pre>"},{"location":"python/dictionaries/#update-the-value-for-existing-key-overwrite","title":"Update the Value for existing Key (overwrite)","text":"<pre><code>&gt;&gt;&gt; my_dict['key2'] = 'value1'\n&gt;&gt;&gt; my_dict\n{'key1': 'value1', 'key2': 'value1'}\n</code></pre>"},{"location":"python/dictionaries/#add-multiple-values-to-key","title":"Add multiple Values to Key","text":"<p>Because a Value is a single object, I commonly use list's when I need a Key to contain multiple Values.</p> <p>Convert your Key with a single value to a Key with a list object as a Value:</p> <pre><code>&gt;&gt;&gt; my_dict['key1'] = [my_dict['key1']]\n&gt;&gt;&gt; my_dict\n{'key1': ['value1']}\n</code></pre>"},{"location":"python/json/","title":"JSON in Python","text":"<p>JSON is made up of \"Key-Value Pairs\". JSON supports a few data-types.</p>"},{"location":"python/json/#data-types","title":"Data Types","text":""},{"location":"python/json/#string","title":"String","text":"<pre><code>{\"key\": \"value\"}\n</code></pre>"},{"location":"python/json/#number","title":"Number","text":"<pre><code>{\"number\": 1234}\n</code></pre>"},{"location":"python/json/#boolean","title":"Boolean","text":"<pre><code>{\"boolean\": True}\n</code></pre>"},{"location":"python/json/#json-object","title":"JSON Object","text":"<pre><code>{\"json_object\": {\"key\": \"value\", \"number\": 1234, \"boolean\": False}}\n</code></pre>"},{"location":"python/json/#array","title":"Array","text":"<pre><code>{\"array\": [\"item1\", \"item2\", \"item3\"]}\n</code></pre>"},{"location":"python/json/#null","title":"Null","text":"<pre><code>{\"key\": null}\n</code></pre>"},{"location":"python/json/#json-library-python","title":"JSON Library (Python)","text":"<pre><code>import json\n\n# some JSON:\nx =  '{ \"name\":\"John\", \"age\":30, \"city\":\"New York\"}'\n\n# parse x:\ny = json.loads(x)\n\n# the result is a Python dictionary:\nprint(y[\"age\"]) \n</code></pre>"},{"location":"tcpdump/","title":"TCPdump","text":""},{"location":"tcpdump/#filters","title":"Filters","text":"<p>Filters are written in BPF (Berkley Packet Filter).</p>"},{"location":"tcpdump/#cdp-vtp-pagp-dtp-rstp","title":"CDP, VTP, PAgP, DTP, RSTP","text":"<pre><code>'ether dst 01:00:0c:cc:cc:cd'\n</code></pre>"},{"location":"tcpdump/#eigrp","title":"EIGRP","text":"<pre><code>'ether dst 01:00:5e:00:00:0a'\n'host 224.0.0.10'\n</code></pre>"},{"location":"tcpdump/#spanning-tree","title":"Spanning-Tree","text":"<pre><code>'stp'\n</code></pre>"},{"location":"tcpdump/#vlans-8021q","title":"VLANs / 802.1q","text":"<pre><code>'vlan'\n</code></pre>"},{"location":"tcpdump/#show-only-tls-handshake-type-client-hellos","title":"Show Only TLS Handshake Type: Client Hello's","text":"<pre><code>'(tcp[((tcp[12:1] &amp; 0xf0) &gt;&gt; 2):1] = 0x16) and (tcp[((tcp[12:1] &amp; 0xf0) &gt;&gt; 2)+5:1] = 0x01)'\n</code></pre>"},{"location":"tcpdump/#show-only-tls-handshake-type-server-hellos","title":"Show Only TLS Handshake Type: Server Hello's","text":"<pre><code>'(tcp[((tcp[12:1] &amp; 0xf0) &gt;&gt; 2):1] = 0x16) and (tcp[((tcp[12:1] &amp; 0xf0) &gt;&gt; 2)+5:1] = 0x02)'\n</code></pre>"},{"location":"tcpdump/#show-only-tls-12-record-layer-handshake","title":"Show Only TLS 1.2 Record Layer: Handshake","text":"<p><pre><code>'tcp[((tcp[12:1] &amp; 0xf0) &gt;&gt; 2):4] &amp; 0xffffff00 = 0x16030300'\n</code></pre> NOTE: Only finds the hex string in the first 3 bytes of the TCP payload. TLS Records can be layered and <code>0x160303</code> can be buried. Using this filter only can result in missed packets.</p> <p></p>"},{"location":"tcpdump/#troubleshooting","title":"Troubleshooting","text":""},{"location":"tcpdump/#continuous-capture-failing-to-write-to-new-file","title":"Continuous capture failing to write to new file","text":"<pre><code>sudo tcpdump -i ens160 -C 100 -w web_traffic.pcap\n</code></pre> <p>When tcpdump writes continuous files it appends a number to the file name.</p> <p>If you wanted to continuously capture traffic and write it to disks in approximately 100MB files using the base filename <code>full_capture.pcap</code>. Once the first ~100MB is written, tcpdump will create a new file with the name: <code>full_capture.pcap1</code>. This will continue, increasing the numeric value appended to the end.</p> <p>The conflict with the apparmor policy happens because apparmor will only allow tcpdump to write files with extensions: <code>.pcap</code> or <code>.cap</code> (in any combination of upper- and lowercase).</p> <p>The problem is this section of the apparmor policy: <code>/etc/apparmor.d/usr.bin.tcpdump</code></p> <pre><code>  # for -r, -F and -w\n  /**.[pP][cC][aA][pP] rw,\n  /**.[cC][aA][pP] rw,\n</code></pre> <p>We can modify the policy to allow the continuous writing of files by adding the below lines or modifying the existing lines from the config section above:</p> <pre><code>  # for -r, -F and -w\n  /**.[pP][cC][aA][pP][0-9]*  rw,\n  /**.[cC][aA][pP][0-9]*  rw,\n</code></pre>"},{"location":"tcpdump/#solution","title":"Solution","text":"<p>My solution isn't to disable apparmor, but instead to modify the apparmor policy so tcpdump can do what it needs and apparmor can continue to do what it does.</p>"},{"location":"tcpdump/#commands","title":"Commands","text":"<ol> <li>Check the apparmor status: <code>sudo aa-status</code></li> <li>Check the logs: <code>cat /var/log/syslog | grep -i denied</code> <pre><code>Apr 26 20:58:00 hostname-pcap kernel: [ 2169.229999] audit: type=1400 audit(1651006680.331:31): apparmor=\"DENIED\" operation=\"mknod\" profile=\"tcpdump\" name=\"/mnt/pcap/web-traffic\" pid=1905 comm=\"tcpdump\" requested_mask=\"c\" denied_mask=\"c\" fsuid=109 ouid=109\nApr 26 20:58:54 hostname-pcap kernel: [ 2223.096608] audit: type=1400 audit(1651006734.198:32): apparmor=\"DENIED\" operation=\"mknod\" profile=\"tcpdump\" name=\"/mnt/pcap/web-traffic\" pid=1923 comm=\"tcpdump\" requested_mask=\"c\" denied_mask=\"c\" fsuid=109 ouid=109\nApr 26 21:00:02 hostname-pcap kernel: [ 2291.315473] audit: type=1400 audit(1651006802.421:33): apparmor=\"DENIED\" operation=\"mknod\" profile=\"tcpdump\" name=\"/mnt/pcap/web-traffic\" pid=1933 comm=\"tcpdump\" requested_mask=\"c\" denied_mask=\"c\" fsuid=109 ouid=109\nApr 26 21:01:55 hostname-pcap kernel: [ 2404.315427] audit: type=1400 audit(1651006915.426:34): apparmor=\"DENIED\" operation=\"mknod\" profile=\"tcpdump\" name=\"/mnt/pcap/web-traffic\" pid=1953 comm=\"tcpdump\" requested_mask=\"c\" denied_mask=\"c\" fsuid=1000 ouid=1000\nApr 26 21:02:29 hostname-pcap kernel: [ 2438.316675] audit: type=1400 audit(1651006949.432:35): apparmor=\"DENIED\" operation=\"mknod\" profile=\"tcpdump\" name=\"/mnt/pcap/web_traffic\" pid=1960 comm=\"tcpdump\" requested_mask=\"c\" denied_mask=\"c\" fsuid=1000 ouid=1000\nApr 26 21:02:40 hostname-pcap kernel: [ 2448.918463] audit: type=1400 audit(1651006960.032:36): apparmor=\"DENIED\" operation=\"mknod\" profile=\"tcpdump\" name=\"/mnt/pcap/web_traffic\" pid=1963 comm=\"tcpdump\" requested_mask=\"c\" denied_mask=\"c\" fsuid=0 ouid=0\nApr 26 21:04:15 hostname-pcap kernel: [ 2544.397543] audit: type=1400 audit(1651007055.516:37): apparmor=\"DENIED\" operation=\"mknod\" profile=\"tcpdump\" name=\"/mnt/pcap/web_traffic\" pid=1996 comm=\"tcpdump\" requested_mask=\"c\" denied_mask=\"c\" fsuid=109 ouid=109\nApr 26 21:04:23 hostname-pcap kernel: [ 2552.557682] audit: type=1400 audit(1651007063.676:38): apparmor=\"DENIED\" operation=\"mknod\" profile=\"tcpdump\" name=\"/mnt/pcap/web_traffic\" pid=1999 comm=\"tcpdump\" requested_mask=\"c\" denied_mask=\"c\" fsuid=1000 ouid=1000\nApr 26 21:05:29 hostname-pcap kernel: [ 2618.028858] audit: type=1400 audit(1651007129.151:39): apparmor=\"DENIED\" operation=\"mknod\" profile=\"tcpdump\" name=\"/mnt/pcap/web_traffic\" pid=2018 comm=\"tcpdump\" requested_mask=\"c\" denied_mask=\"c\" fsuid=109 ouid=109\nApr 26 21:05:35 hostname-pcap kernel: [ 2624.785708] audit: type=1400 audit(1651007135.907:40): apparmor=\"DENIED\" operation=\"mknod\" profile=\"tcpdump\" name=\"/mnt/pcap/web_traffic\" pid=2021 comm=\"tcpdump\" requested_mask=\"c\" denied_mask=\"c\" fsuid=1000 ouid=1000\nApr 26 21:06:04 hostname-pcap kernel: [ 2653.751938] audit: type=1400 audit(1651007164.877:41): apparmor=\"DENIED\" operation=\"mknod\" profile=\"tcpdump\" name=\"/mnt/pcap/web_traffic\" pid=2025 comm=\"tcpdump\" requested_mask=\"c\" denied_mask=\"c\" fsuid=109 ouid=109\nApr 26 22:31:05 hostname-pcap kernel: [ 7753.978615] audit: type=1400 audit(1651012265.324:42): apparmor=\"DENIED\" operation=\"mknod\" profile=\"tcpdump\" name=\"/mnt/pcap/web_traffic.pcap1\" pid=2042 comm=\"tcpdump\" requested_mask=\"c\" denied_mask=\"c\" fsuid=109 ouid=109\nApr 27 09:52:34 hostname-pcap kernel: [48641.533480] audit: type=1400 audit(1651053154.580:43): apparmor=\"DENIED\" operation=\"mknod\" profile=\"tcpdump\" name=\"/mnt/pcap/web_traffic.pcap1\" pid=3078 comm=\"tcpdump\" requested_mask=\"c\" denied_mask=\"c\" fsuid=109 ouid=109\n</code></pre></li> <li>Disable the tcpdump apparmor policy:  <code>sudo apparmor_parser -R /etc/apparmor.d/usr.bin.tcpdump</code></li> <li>Modify the apparmor policy: <code>/etc/apparmor.d/usr.bin.tcpdump</code> <pre><code>  # for -r, -F and -w\n  /**.[pP][cC][aA][pP][0-9]*  rw,\n  /**.[cC][aA][pP][0-9]*  rw,\n</code></pre></li> <li>Test/Verify tcpdump can write/create new files.  (NOTE: The policy is not activated yet. We just want to make sure it works while it's still off)</li> <li>Re-enable the tcpdump apparmor policy:  <code>sudo apparmor_parser /etc/apparmor.d/usr.bin.tcpdump</code></li> <li>Test/Verify tcpdump can write/create new files past the initial base filename given when the command was invoked.</li> </ol>"},{"location":"tcpdump/#reference","title":"Reference","text":"<ul> <li>https://www.xmodulo.com/disable-particular-apparmor-profile-ubuntu.html</li> </ul>"},{"location":"tcpdump/#linksreference","title":"Links/Reference","text":"<ul> <li>https://www.tcpdump.org/manpages/pcap-filter.7.html</li> </ul>"},{"location":"tcpreplay/","title":"TCPReplay","text":""},{"location":"tcpreplay/#basic-usage","title":"Basic Usage","text":""},{"location":"tcpreplay/#troubleshooting","title":"Troubleshooting","text":""},{"location":"tcpreplay/#unsupported-dlt-type","title":"Unsupported DLT Type","text":"<p>Using the command <code>tcpreplay -i [interface] [filename.pcap]</code> to replay a *.pcap and getting alot of Warnings on the screen: <pre><code>Warning: Unable to process unsupported DLT Type: Ethernet (0x1)\nWarning: Unable to process unsupported DLT Type: Ethernet (0x1)\nWarning: Unable to process unsupported DLT Type: Ethernet (0x1)\nWarning: Unable to process unsupported DLT Type: Ethernet (0x1)\nWarning: Unable to process unsupported DLT Type: Ethernet (0x1)\nWarning: Unable to process unsupported DLT Type: Ethernet (0x1)\nWarning: Unable to process unsupported DLT Type: Ethernet (0x1)\n...etc...\n</code></pre></p> <p>While the file I was using openned fine in Wireshark and parsed perfected using tcpdump, it was generating warnings in TCPReplay and I wanted to understand why so I could more reliably replay predicatable traffic.</p> <p>The frames and packets it was flagging with a Warning we all STP, RSTP, ARP and EIGRP. This was a Full-PCAP from a CTF event and contained all protocols. Filtering out those protocols (sans EIGRP IIRC) was the solution.</p>"},{"location":"tcpreplay/#solution","title":"Solution","text":"<p>Preparse the PCAPs excluding all non-IP traffic. To do this I used tcpdump: <pre><code>tcpdump -r [in-filename] -w [out-filename] 'ip'\n</code></pre></p> <p>Tcpdump will read a *.pcap file, filter all traffic leaving only IP traffic and writing it to a new file. Now, using TCPReplay I could replay the new files without issue or Warning.</p>"},{"location":"tcpreplay/#reference","title":"Reference","text":"<ul> <li>https://sourceforge.net/p/tcpreplay/mailman/tcpreplay-users/?viewmonth=202204&amp;style=flat</li> </ul>"},{"location":"tcpreplay/#linksreferences","title":"Links/References","text":"<ul> <li>Homepage: http://tcpreplay.appneta.com/</li> <li>GitHub: https://github.com/appneta/tcpreplay</li> </ul>"},{"location":"windows/","title":"Windows","text":""},{"location":"windows/#for-loop-w-range-of-numbers","title":"For Loop w/ Range of Numbers","text":"<p>Step from 1 to 450 in steps of 1. <pre><code>FOR /L %i IN (1,1,450) DO curl http://hostname.fqdn/%i -o NUL: -s &amp;&amp; TIMEOUT /T 1 /NOBREAK\n</code></pre></p>"},{"location":"windows/#for-loop-w-files","title":"For Loop w/ Files","text":"<p>Base64 encode files from folder. <pre><code>FOR /F %i IN ('dir *.txt') DO certutil -encode %i %i.b64\n</code></pre></p>"},{"location":"windows/#wsl2-error","title":"WSL2 Error","text":"<p>To fix the error: <pre><code>Logon failure: the user has not been granted the requested logon type at this computer.                                                                                                       \nPress any key to continue... \n</code></pre></p> <p>As Administrator run in Powershell: <pre><code>Get-Service vmcompute | Restart-Service\n</code></pre></p> <p>Then start your WSL2 VM again.</p>"},{"location":"windows/#wsl2-folder-location","title":"WSL2 Folder Location","text":"<p><code>\\\\wsl$\\[wsl_vm-name]\\home</code> maps to the <code>/home/</code> folder inside the VM.</p>"},{"location":"windows/capture-netsh/","title":"Packet Capture Using <code>netsh</code>","text":"<p>NOTE: Requires elevated privileges. <pre><code>C:\\Users\\tony.e&gt;netsh trace start capture=yes tracefile=C:\\Users\\tony.e\\Desktop\\netsh.etl\nThe requested operation requires elevation (Run as administrator).\n</code></pre></p>"},{"location":"windows/capture-netsh/#start-capture","title":"Start Capture","text":"<pre><code>netsh trace start capture=yes tracefile=C:\\Users\\tony.e\\Desktop\\netsh.etl\n</code></pre> <p>Example: <pre><code>C:\\WINDOWS\\system32&gt;netsh trace start capture=yes tracefile=C:\\Users\\tony.e\\Desktop\\netsh.etl\n\nTrace configuration:\n-------------------------------------------------------------------\nStatus:             Running\nTrace File:         C:\\Users\\tony.e\\Desktop\\netsh.etl\nAppend:             Off\nCircular:           On\nMax Size:           512 MB\nReport:             Off\n</code></pre></p>"},{"location":"windows/capture-netsh/#stop-capture","title":"Stop Capture","text":"<pre><code>netsh trace stop\n</code></pre> <p>Example: <pre><code>C:\\WINDOWS\\system32&gt;netsh trace stop\nMerging traces ... done\nGenerating data collection ... done\nThe trace file and additional troubleshooting information have been compiled as \"C:\\Users\\tony.e\\Desktop\\netsh.cab\".\nFile location = C:\\Users\\tony.e\\Desktop\\netsh.etl\nTracing session was successfully stopped.\n</code></pre></p>"},{"location":"windows/capture-netsh/#convert-etl-to-pcap","title":"Convert *.etl to *.pcap","text":"<p>Download CLI conversion utility: https://github.com/microsoft/etl2pcapng/releases</p> <p>Run utility via Windows Command Prompt: <pre><code>etl2pcapng &lt;infile&gt; &lt;outfile&gt;\n</code></pre></p> <p>Example: <pre><code>C:\\Users\\tony.e\\Downloads\\etl2pcapng\\x64&gt;etl2pcapng.exe C:\\Users\\tony.e\\Desktop\\netsh.etl C:\\Users\\tony.e\\Desktop\\netsh.pcap\nIF: medium=eth                  ID=0    IfIndex=3       VlanID=0\nIF: medium=wifi                 ID=1    IfIndex=4\nIF: medium=eth                  ID=2    IfIndex=53      VlanID=0\nConverted 1024 frames\n</code></pre></p>"},{"location":"windows/capture-pktmon/","title":"Packet Capture Using <code>pktmon</code>","text":"<p>NOTE: Requires elevated privileges (run Command Prompt as Administrator) <pre><code>C:\\Users\\anthony.efantis&gt;pktmon list\nFailed to communicate with the PktMon driver. Access is denied.\n</code></pre></p>"},{"location":"windows/capture-pktmon/#start-capture","title":"Start Capture","text":"<pre><code>pktmon start --capture\n</code></pre> <p>Example: <pre><code>C:\\WINDOWS\\system32&gt;pktmon start --capture\n\nLogger Parameters:\n    Logger name:        PktMon\n    Logging mode:       Circular\n    Log file:           C:\\WINDOWS\\system32\\PktMon.etl\n    Max file size:      512 MB\n    Memory used:        256 MB\n\nCollected Data:\n    Packet counters, packet capture\n\nCapture Type:\n    All packets\n\nMonitored Components:\n    All\n\nPacket Filters:\n     # Name     MAC Address       EtherType Protocol\n     - ----     -----------       --------- --------\n     1 SenseNdr                             UDP\n     2 SenseNdr 01-00-0C-CC-CC-CC\n     3 SenseNdr                   ARP\n     4 SenseNdr                             TCP\n     5 SenseNdr                   LLDP\n     6 SenseNdr                             ICMP\n     7 SenseNdr                             ICMPv6\n     8 SenseNdr                             0x2\n     9 SenseNdr                             0x32\n    10 SenseNdr                             0x33\n    11 SenseNdr                             0x2f\n    12 SenseNdr                             0x73\n    13 SenseNdr                             FC\n</code></pre></p>"},{"location":"windows/capture-pktmon/#stop-capture","title":"Stop Capture","text":"<pre><code>pktmon stop\n</code></pre> <p>Example: <pre><code>C:\\WINDOWS\\system32&gt;pktmon stop\nFlushing logs...\nMerging metadata...\nLog file: C:\\WINDOWS\\system32\\PktMon.etl (No events lost)\n</code></pre></p>"},{"location":"windows/capture-pktmon/#convert-etl-to-pcap","title":"Convert *.etl to *.pcap","text":"<pre><code>pktmon etl2pcap &lt;filename.etl&gt; --out &lt;filename.pcap&gt;\n</code></pre> <p>Example: <pre><code>C:\\WINDOWS\\system32&gt;pktmon etl2pcap PktMon.etl --out pktmon.pcap\nProcessing...\n\nPackets total:       8106\nPacket drop count:   0\nPackets formatted:   8106\nFormatted file:      pktmon.pcap\n</code></pre></p>"},{"location":"windows/capture-pktmon/#optional-choose-an-interface-to-capture-from","title":"Optional: Choose an Interface to capture from","text":"<pre><code>pktmon list\n</code></pre> <p>Example: <pre><code>C:\\WINDOWS\\system32&gt;pktmon list\n\nNetwork Adapters:\n   Id MAC Address       Name\n   -- -----------       ----\n  595 38-00-20-09-00-2A Dell Giga Ethernet\n   10 D0-00-10-07-00-8A Intel(R) Wi-Fi 6 AX201 160MHz\n   11 00-FF-70-07-00-8A TAP-Windows Adapter V9\n  241 00-00-50-01-00-41 Virtual Machine\n  121 00-00-50-0E-00-EF vEthernet (WSL)\n</code></pre></p>"},{"location":"windows/capture-pktmon/#use-the-interface-id-in-the-start-command","title":"Use the Interface ID in the <code>start</code> command","text":"<pre><code>pktmon start --capture -c 10\n</code></pre>"},{"location":"zeek/","title":"Zeek","text":""},{"location":"zeek/#zeek-broker","title":"Zeek Broker","text":"<p>Grab the latest from Zeek Broker's Releases on Github: https://github.com/zeek/broker/releases</p> <p>Required Packages: (<code>sudo apt install [package]</code>)</p> <ul> <li><code>cmake</code></li> <li><code>build-essential</code></li> <li><code>libssl-dev</code></li> <li><code>libpython3-dev</code></li> </ul> <pre><code>./configure\nmake\nmake install\n</code></pre>"}]}